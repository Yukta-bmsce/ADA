#include<stdio.h>
#include<stdlib.h>
#include<time.h>

void heapify(int arr[],int n,int i)
{
    int largest=i;
    int left=2*i+1;
    int right=2*i+2;
    
    if(left<n && arr[left]>arr[largest])
    largest=left;
    
    if(right<n && arr[right]>arr[largest])
    largest=right;
    
    if(largest!=i)
    {
        int temp=arr[i];
        arr[i]=arr[largest];
        arr[largest]=temp;
        heapify(arr,i,0);
    }
}

void heapsort(int arr[],int n)
{
    for(int i=n/2-1;i>=0;i--)
    heapify(arr,n,i);
    
    for(int i=n-1;i>0;i--)
    {
        int temp=arr[0];
        arr[0]=arr[i];
        arr[i]=temp;
        heapify(arr,i,0);
    }
}
 void printarr(int arr[],int n)
 {
     for(int i=0;i<n;++i)
     printf("%d ",arr[i]);
     printf("\n");
 }
 
 int main()
 {
     int n;
     printf("enter the number of elements:");
     scanf("%d",&n);
     
     int* arr=(int*)malloc(n*sizeof(int));
     printf("enter the elements:");
     for(int i=0;i<n;++i)
     scanf("%d",&arr[i]);
     
     clock_t start=clock();
     heapsort(arr,n);
     clock_t end=clock();
     
     double time_taken=((double)(end-start))/CLOCKS_PER_SEC;
     
     printf("sorted array:");
     printarr(arr,n);
     
     printf("time taken:%.6f sec\n",time_taken);
     
     free(arr);
     return 0;
 }
